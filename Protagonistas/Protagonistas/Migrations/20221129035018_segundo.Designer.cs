// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Protagonistas.Data;

#nullable disable

namespace Protagonistas.Migrations
{
    [DbContext(typeof(ProtagonistasContext))]
    [Migration("20221129035018_segundo")]
    partial class segundo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Protagonistas.Models.Ancestralidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ancestralidade");
                });

            modelBuilder.Entity("Protagonistas.Models.Biografia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Biografia");
                });

            modelBuilder.Entity("Protagonistas.Models.Caminho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caminho");
                });

            modelBuilder.Entity("Protagonistas.Models.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AncestralidadeId")
                        .HasColumnType("int");

                    b.Property<int?>("BiografiaId")
                        .HasColumnType("int");

                    b.Property<int?>("CaminhoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Retrato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AncestralidadeId");

                    b.HasIndex("BiografiaId");

                    b.HasIndex("CaminhoId");

                    b.ToTable("Personagem");
                });

            modelBuilder.Entity("Protagonistas.Models.Personagem", b =>
                {
                    b.HasOne("Protagonistas.Models.Ancestralidade", "Ancestralidade")
                        .WithMany()
                        .HasForeignKey("AncestralidadeId");

                    b.HasOne("Protagonistas.Models.Biografia", "Biografia")
                        .WithMany()
                        .HasForeignKey("BiografiaId");

                    b.HasOne("Protagonistas.Models.Caminho", "Caminho")
                        .WithMany()
                        .HasForeignKey("CaminhoId");

                    b.Navigation("Ancestralidade");

                    b.Navigation("Biografia");

                    b.Navigation("Caminho");
                });
#pragma warning restore 612, 618
        }
    }
}
